stages:
  - Git Access
  - Model Check
  - Build Whole Model
  - model_processing
  - test
  - deploy
  - build_docs

variables:
  GITHUB_USER: vaikundamanimugesh
  IMAGE_NAME: ghcr.io/$GITHUB_USER/psmprotech_mvp
  IMAGE_TAG: $CI_COMMIT_REF_SLUG
  FULL_IMAGE_NAME: $IMAGE_NAME:$IMAGE_TAG

# -------------------------------------------
# STAGE 1: GIT ACCESS
# -------------------------------------------
check_git_access:
  stage: Git Access
  image: alpine:latest
  script:
    - apk add --no-cache git
    - echo "üîç Verifying Git repository..."
    - git status
    - git rev-parse --abbrev-ref HEAD

# -------------------------------------------
# STAGE 2: MODEL FOLDER CHECKS (SUB-TASKS)
# -------------------------------------------
check_model_falcon_r1:
  stage: Model Check
  image: alpine:latest
  script:
    - test -d "Src/Model/falcon_r1" && echo "‚úÖ falcon_r1 OK" || (echo "‚ùå falcon_r1 missing" && exit 1)
  needs: [check_git_access]

check_model_falcon_r2:
  stage: Model Check
  image: alpine:latest
  script:
    - test -d "Src/Model/falcon_r2" && echo "‚úÖ falcon_r2 OK" || (echo "‚ùå falcon_r2 missing" && exit 1)
  needs: [check_git_access]

check_model_falcon_r3:
  stage: Model Check
  image: alpine:latest
  script:
    - test -d "Src/Model/falcon_r3" && echo "‚úÖ falcon_r3 OK" || (echo "‚ùå falcon_r3 missing" && exit 1)
  needs: [check_git_access]

check_model_falcon_r4:
  stage: Model Check
  image: alpine:latest
  script:
    - test -d "Src/Model/falcon_r4" && echo "‚úÖ falcon_r4 OK" || (echo "‚ùå falcon_r4 missing" && exit 1)
  needs: [check_git_access]

# -------------------------------------------
# STAGE 3: BUILD IMAGE AFTER MODEL FILES
# -------------------------------------------
build_application_image:
  stage: Build Whole Model
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USER" --password-stdin
  script:
    - echo "üì¶ Validating .pt files..."
    - |
      for i in 1 2 3; do
        if [ ! -f "Src/deploy/models/falcon_r$i.pt" ]; then
          echo "‚ùå Missing: Src/deploy/models/falcon_r$i.pt"
          exit 1
        fi
      done
    - docker build -t $FULL_IMAGE_NAME -f Src/deploy/Dockerfile Src/deploy
    - docker push $FULL_IMAGE_NAME
  needs:
    - check_model_falcon_r1
    - check_model_falcon_r2
    - check_model_falcon_r3
    - check_model_falcon_r4
  rules:
    - if: $CI_COMMIT_BRANCH

# Remaining stages stay unchanged and follow previous structure...
# (ocr_classification_test, application_tests, deploy_application, build_documentation)