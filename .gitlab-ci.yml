stages:
  - build
  - model1
  - model2
  - model3
  - model4
  - test
  - gitlog
  - deploy

build:
  image: danteev/texlive
  stage: build
  script:
    - cd Documentation
    - for file in *.tex; do latexmk -pdf "$file"; done
  artifacts:
    paths:
      - Documentation/*.pdf
    expire_in: 1 week

model1:
  image: alpine:latest
  stage: model1
  script:
    - echo "Processing Model 1..."

model2:
  image: alpine:latest
  stage: model2
  script:
    - echo "Processing Model 2..."

model3:
  image: alpine:latest
  stage: model3
  script:
    - echo "Processing Model 3..."

model4:
  image: alpine:latest
  stage: model4
  script:
    - echo "Processing Model 4..."

test:
  image: alpine:latest
  stage: test
  script:
    - echo "Running tests..."

gitlog:
  image: python:3.10
  stage: gitlog
  before_script:
    - git fetch --unshallow || true
    - git fetch --all --tags
  script:
    - echo "Working dir: $PWD"
    - ls -lah .git
    - pip install --no-cache-dir --upgrade pip
    - mkdir -p gitlog_outputs
    - python auto_commit_summary.py
    - ls -R gitlog_outputs
  artifacts:
    paths:
      - gitlog_outputs/*.log
    expire_in: 1 week

deploy:
  image: alpine:latest
  stage: deploy
  script:
    - echo "Deploying application..."
